import pyglet
from pyglet import shapes
from pyglet.window import key

# Constants
WINDOW_SIZE = 600
CELL_SIZE = 40
TOTAL_GRID = WINDOW_SIZE // CELL_SIZE

# Setup window and batch
window = pyglet.window.Window(WINDOW_SIZE, WINDOW_SIZE, "SAR Mission")
batch = pyglet.graphics.Batch()

# Create outer wall as small purple squares
wall_blocks = []
for i in range(TOTAL_GRID):
    # Top and bottom walls
    wall_blocks.append(shapes.Rectangle(i * CELL_SIZE, 0, CELL_SIZE, CELL_SIZE, color=(128, 0, 128), batch=batch))
    wall_blocks.append(shapes.Rectangle(i * CELL_SIZE, WINDOW_SIZE - CELL_SIZE, CELL_SIZE, CELL_SIZE, color=(128, 0, 128), batch=batch))
    # Left and right walls
    wall_blocks.append(shapes.Rectangle(0, i * CELL_SIZE, CELL_SIZE, CELL_SIZE, color=(128, 0, 128), batch=batch))
    wall_blocks.append(shapes.Rectangle(WINDOW_SIZE - CELL_SIZE, i * CELL_SIZE, CELL_SIZE, CELL_SIZE, color=(128, 0, 128), batch=batch))

# Player circle (start in center)
player_x = WINDOW_SIZE // 2
player_y = WINDOW_SIZE // 2
circle = shapes.Circle(player_x, player_y, CELL_SIZE // 2 - 5, color=(255, 0, 0), batch=batch)

def draw_grid_lines():
    for i in range(TOTAL_GRID + 1):
        vertical = shapes.Line(i * CELL_SIZE, 0, i * CELL_SIZE, WINDOW_SIZE, color=(220, 220, 220), batch=batch)
        horizontal = shapes.Line(0, i * CELL_SIZE, WINDOW_SIZE, i * CELL_SIZE, color=(220, 220, 220), batch=batch)
        vertical.draw()
        horizontal.draw()

@window.event
def on_draw():
    window.clear()
    batch.draw()
    draw_grid_lines()

@window.event
def on_key_press(symbol, modifiers):
    global player_x, player_y
    if symbol == key.RIGHT:
        if player_x + CELL_SIZE < WINDOW_SIZE - CELL_SIZE:
            player_x += CELL_SIZE
    elif symbol == key.LEFT:
        if player_x - CELL_SIZE >= CELL_SIZE:
            player_x -= CELL_SIZE
    elif symbol == key.UP:
        if player_y + CELL_SIZE < WINDOW_SIZE - CELL_SIZE:
            player_y += CELL_SIZE
    elif symbol == key.DOWN:
        if player_y - CELL_SIZE >= CELL_SIZE:
            player_y -= CELL_SIZE

    # Update circle position
    circle.x = player_x
    circle.y = player_y

if __name__ == "__main__":
    pyglet.app.run()
